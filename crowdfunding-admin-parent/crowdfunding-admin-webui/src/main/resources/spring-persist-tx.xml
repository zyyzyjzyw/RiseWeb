<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--配置自动扫描的包:主要是为了把Service扫描到IOC容器中-->
    <context:component-scan base-package="com.tedu.java.service"></context:component-scan>
    <!--配置事务管理器-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--配置事务切面-->
    <aop:config>
        <!--考虑到要整合SpringSecurity，避免把UserDetailService加入到事务控制，所以把切入点定位到*ServiceInpl位置-->
        <aop:pointcut id="txPointcut" expression="execution(* *..*ServiceImpl.*(..))"/>
        <!--将切入点表达式与事务通知关联起来-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"></aop:advisor>
    </aop:config>
    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!--配置事务属性-->
        <tx:attributes>
            <!--查询方法：配置只读属性,让数据库知道这是一个查询操作。就能够进行一定优化-->
            <tx:method name="get" read-only="true"/>
            <tx:method name="find" read-only="true"></tx:method>
            <tx:method name="query" read-only="true"></tx:method>
            <tx:method name="count" read-only="true"></tx:method>
            <!--增删改方法：配置事务传播行为，回滚异常-->
            <!--propagation属性：
            REQUIRED：默认值，表示当前方法必须工作在事务中，如果当前线程上没有已经开启的事务，则自己开启事务。如果有事务，则使用当前事务。
            REQUIRES_NEW:建议的值。表示当前方法必须工作在事务中，如果当前线程上没有已经开启的事务，则自己开启事务。如果有事务，也自己开启一个新的事务。
            -->
            <!--rollback-for属性：配置事务方法针对什么样的异常回滚
            默认：RuntimeException。
            建议：编译时和运行时异常都回滚。
            -->
            <tx:method name="save" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
            <tx:method name="update" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
            <tx:method name="remove" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
            <tx:method name="batch" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
        </tx:attributes>
    </tx:advice>

</beans>